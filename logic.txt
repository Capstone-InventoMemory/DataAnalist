📍변수
saleData : 기간 별 출고 수량
timePeriod : 분석 기간(일/주/월)
averageSale : 일일 평균 출고 수량
leadTime : 재고 주문시 걸리는 시간
serviceLevel : 고객에게 제공할 서비스 레벨
currentStock : 현재 재고 수량
predictedSale : 예상 판매량
expectedUsage : 예상 소진량
stdDev : 수요 표준 편차
safeStock : 안전 재고 
orderQuantity : 주문해야하는 수량

📍로직 흐름
1. 출고 속도 계산
2. 입고 주기 파악
3, 안전 재고 설정
4. 예상 소진량 계산
5. 재고 예측 및 주문량 계산

📍기간 별 출고 수량 계산
def Stockout(saleData, timePeriod):
    return sum(saleData) / timePeriod 

📍안전 재고 수준 설정
def Safetystock(averageSale, leadTime, stdDev, serviceLevel):
    import math
    zScore = norm.ppf(serviceLevel) //zScore 서비스 레벨에 대응하는 구역
    safeStock = zScore * stdDev * math.sqrt(leadTime)
    return math.ceil(safeStock)

📍예측 주문 수량 계산
def Orderquantity(currentStock, predictedSale, leadTime, safeStock):
    expectedUsage = predictedSale * leadTime
    totalRequiredStock = expectedUsage + safeStock
    orderQuantity = totalRequiredStock - currentStock
    return max(0, orderQuantity)

*서비스레벨 : 특정 기간 동안 고객의 수요를 얼마나 성공적으로 충족할 수 있는지를 백분율로 나타낸 것. 서비스 레벨이 90%일 때: 주문의 90%를 즉시 처리할 수 있는 재고를 유지하고, 10%의 경우 재고 부족이 발생할 수 있음. 